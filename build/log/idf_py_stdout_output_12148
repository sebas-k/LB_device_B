[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\MyArchive\01_Aktuelle_Projekte\ESP32\LB_device_B\build\bootloader\esp-idf\esptool_py && C:\esp\tools\espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/esp/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/MyArchive/01_Aktuelle_Projekte/ESP32/LB_device_B/build/bootloader/bootloader.bin"
Bootloader binary size 0x51f0 bytes. 0x2e10 bytes (36%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/LB_device_B.c.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable LB_device_B.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/MyArchive/01_Aktuelle_Projekte/ESP32/LB_device_B/build/LB_device_B.bin
[7/7] cmd.exe /C "cd /D C:\MyArchive\01_Aktuelle_Projekte\ESP32\LB_device_B\build\esp-idf\esptool_py && C:\esp\tools\espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/esp/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/MyArchive/01_Aktuelle_Projekte/ESP32/LB_device_B/build/partition_table/partition-table.bin C:/MyArchive/01_Aktuelle_Projekte/ESP32/LB_device_B/build/LB_device_B.bin"
LB_device_B.bin binary size 0x34400 bytes. Smallest app partition is 0x100000 bytes. 0xcbc00 bytes (80%) free.
